{"pageProps":{"post":{"frontMatter":{"date":"2022-10-02T15:00:00","title":"Simple Kanban Board","tags":["react","typescript","react_beautiful_dnd","react_hook_form","recoil","styled_components"],"description":"react-beautiful-dnd를 이용한 간단한 칸반 보드","published":true,"thumbnail":"/static/images/project/simple_kanban_board.jpg"},"body":"> 해당 프로젝트는 다음 링크를 통해 볼 수 있습니다.\n>\n> [https://coyo-hm.github.io/Simple-Kanban-Board/](https://coyo-hm.github.io/Simple-Kanban-Board/)\n\n# Introduction\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/56423604/190454639-62c2abb5-359b-4e33-bc6a-fe45c2fcf3c1.gif)\n![ezgif com-gif-maker (1)](https://user-images.githubusercontent.com/56423604/190454736-c55b9ec0-4d28-436e-bb20-7955f2828167.gif)\n\n> react-beautiful-dnd를 이용한 간단한 칸반 보드입니다.\n>\n> - react-beautiful-dnd를 이용하여 Drag&Drop이 가능한 Kanban Board를 구현하였습니다.\n> - 카드끼리의 위치 이동은 물론 보드끼리의 위치 이동과 보드에서 다른 보드로 카드를 이동시킬 수도 있습니다.\n> - 사용자는 + 버튼을 눌러 보드를 추가할 수도 있으며 아래의 휴지통으로 카드나 보드를 Drag&Drop하여 삭제할 수 있습니다.\n> - Context API를 사용하여 테마 토글을 추가하였습니다. 테마 토글을 사용하여 다크 테마와 기본 테마를 설정할 수 있습니다.\n> - 사용자의 화면에 따라 CSS가 달라지도록 반응형으로 구현하였습니다.\n> - 보드 정보는 Local Storage에 저장하여 브라우저를 종료하더라도 해당 내용이 유지됩니다.\n\n# Quick Start\n\n```shell\nnpm install\nnpm start\n```\n\n# Project Structure\n\n```Plain text\nsrc\n│\n├── atoms ────────────────  Global State\n│\n├── components ───────────  view 컴포넌트\n│   ├── DraggableBoard\n│   ├── DraggableCard\n│   ├── DroppableArea\n│   └── Home\n│\n├── helpers ──────────────  공통 상수\n│   └── constant\n│\n├── hooks ────────────────  hook\n│   └── useTheme\n│\n├── images ───────────────  이미지 파일\n│\n│\n├── style ────────────────  styled-components' custom style & GlobalStyle\n│   ├── globalStyle\n│   └── index\n│\n├── theme ────────────────  theme 관련\n│   ├── ToggleTheme\n│   ├── styled.d.ts\n│   └── theme\n│\n├── App.js ───────────────  Theme Context 적용 & GlobalStyle 적용\n│\n└── index.js ─────────────  애플리케이션 엔트리 포인트\n```\n\n# Tech Stack\n\n- react v_18.2.0\n- react-beautiful-dnd v_13.1.0\n- react-dom v_18.2.0\n- react-helmet v_6.1.0\n- react-hook-form v_7.34.0\n- recoil v_0.7.4\n- styled-components v_5.3.5\n- typescript v_4.8.3\n","fields":{"slug":"project/post/simple-kanban-board"},"path":"project/simple-kanban-board.mdx"},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    span: \"span\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"해당 프로젝트는 다음 링크를 통해 볼 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://coyo-hm.github.io/Simple-Kanban-Board/\",\n          children: \"https://coyo-hm.github.io/Simple-Kanban-Board/\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"introduction\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#introduction\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Introduction\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"https://user-images.githubusercontent.com/56423604/190454639-62c2abb5-359b-4e33-bc6a-fe45c2fcf3c1.gif\",\n        alt: \"ezgif com-gif-maker\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://user-images.githubusercontent.com/56423604/190454736-c55b9ec0-4d28-436e-bb20-7955f2828167.gif\",\n        alt: \"ezgif com-gif-maker (1)\"\n      })]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"react-beautiful-dnd를 이용한 간단한 칸반 보드입니다.\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"react-beautiful-dnd를 이용하여 Drag&Drop이 가능한 Kanban Board를 구현하였습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"카드끼리의 위치 이동은 물론 보드끼리의 위치 이동과 보드에서 다른 보드로 카드를 이동시킬 수도 있습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"사용자는 + 버튼을 눌러 보드를 추가할 수도 있으며 아래의 휴지통으로 카드나 보드를 Drag&Drop하여 삭제할 수 있습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Context API를 사용하여 테마 토글을 추가하였습니다. 테마 토글을 사용하여 다크 테마와 기본 테마를 설정할 수 있습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"사용자의 화면에 따라 CSS가 달라지도록 반응형으로 구현하였습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"보드 정보는 Local Storage에 저장하여 브라우저를 종료하더라도 해당 내용이 유지됩니다.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"quick-start\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#quick-start\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Quick Start\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsxs(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"npm\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"install\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"npm\"\n          }), \" start\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"project-structure\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#project-structure\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Project Structure\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-plain\",\n      children: _jsxs(_components.code, {\n        className: \"language-Plain code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: \"src\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── atoms ────────────────  Global State\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── components ───────────  view 컴포넌트\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── DraggableBoard\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── DraggableCard\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── DroppableArea\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── Home\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── helpers ──────────────  공통 상수\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── constant\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── hooks ────────────────  hook\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── useTheme\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── images ───────────────  이미지 파일\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── style ────────────────  styled-components' custom style & GlobalStyle\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── globalStyle\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── index\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── theme ────────────────  theme 관련\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── ToggleTheme\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── styled.d.ts\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── theme\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── App.js ───────────────  Theme Context 적용 & GlobalStyle 적용\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"└── index.js ─────────────  애플리케이션 엔트리 포인트\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"tech-stack\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#tech-stack\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Tech Stack\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"react v_18.2.0\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"react-beautiful-dnd v_13.1.0\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"react-dom v_18.2.0\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"react-helmet v_6.1.0\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"react-hook-form v_7.34.0\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"recoil v_0.7.4\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"styled-components v_5.3.5\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"typescript v_4.8.3\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tags":[{"tag":"all","count":21},{"tag":"javascript","count":9},{"tag":"react","count":8},{"tag":"typescript","count":6},{"tag":"network","count":4},{"tag":"css","count":2},{"tag":"redux","count":2},{"tag":"axios","count":2},{"tag":"npm","count":1},{"tag":"yarn","count":1},{"tag":"yarn_berry","count":1},{"tag":"styled_components","count":1},{"tag":"redux_persist","count":1},{"tag":"lodash","count":1},{"tag":"python3","count":1},{"tag":"nextjs","count":1},{"tag":"githubpage","count":1},{"tag":"git","count":1},{"tag":"intellij","count":1},{"tag":"emotion","count":1},{"tag":"gatsby","count":1},{"tag":"programming","count":1}]},"__N_SSG":true}