{"pageProps":{"post":{"frontMatter":{"date":"2024-09-11","title":"TypeScript 2802 error(downlevelIteration, target) 오류 해결하기","tags":["typescript"],"series":["trouble_shooting"],"description":"TypeScript 2802 error(downlevelIteration, target) 오류에 대해 알아보고 해결해보기","thumbnail":"https://github.com/user-attachments/assets/ae48b518-5410-49c9-9a47-6377ce2f4479","published":true},"body":"# ⚠️ 문제\n\n<img src=\"https://github.com/user-attachments/assets/6532f868-e772-46d7-8526-eae4b2319499\" />\n\n```\nTS2802: Type NodeListOf<HTMLButtonElement> can only be iterated through when using the --downlevelIteration flag or with a --target of es2015 or higher.\n```\n\n해당 오류는 ECMAScript 2015(ES6)를 지원하지 않는 환경에서 `NodeListOf<HTMLButtonElement>`와 같은 ES6 열거형(Iterable) 객체를 열거하려고 할 때 발생합니다.\n\n\n# 🔧 해결\n\n오류 문에 적혀있는 대로 해결해 봅시다.\n\n## 방법 1. `downlevelIteration` 사용\n\n`tsconfig.json`\n\n```tsx\n{\n  \"compilerOptions\": {\n\t  ...\n    \"target\": \"es5\",\n    \"downlevelIteration\": true,\n    ...\n    }\n  },\n\t...\n}\n\n```\n\n## 방법 2. es6이상으로 target을 지정\n\n현재 `tsconfig.json` 이 `target` 지정이 되어 있지 않아 `esnext`로 `target` 지정해주었습니다.\n\n`tsconfig.json`\n\n```tsx\n{\n  \"compilerOptions\": {\n\t  ...\n    \"target\": \"esnext\",\n    ...\n    }\n  },\n\t...\n}\n\n```\n\n## 해결완료\n<img src=\"https://github.com/user-attachments/assets/443e9caa-e159-402b-b77d-fe2caf0a3071\"/>\n\n저는 방법 1의 경우 빌드된 파일의 크기가 다소 커져서 방법 2를 사용해서 해결했습니다.\n","fields":{"slug":"error-ts2802"},"path":"error-ts2802.mdx"},"allSeriesInfo":[{"title":"⚠️ Trouble Shooting Log","tags":[],"description":"프로젝트 진행 도중 나오는 문제 해결 기록","thumbnail":"https://user-images.githubusercontent.com/56423604/283492423-a261b95e-c0e1-4651-9351-83fc538db17d.png","startDate":"2023-10-09T00:00:00.000Z","endDate":"2024-09-11T00:00:00.000Z","posts":[{"date":"2023-10-09T00:00:00","title":"1. NextJS Large Page Data Warning 해결하기","tags":["nextjs"],"series":["trouble_shooting","blog"],"description":"NextJS Large Page Data Warning 해결 과정","published":true,"thumbnail":"https://user-images.githubusercontent.com/56423604/273578963-e3f37379-368c-460d-9b37-c4b98cfba9e7.png","path":"nextjs-large-page-data-warning.mdx","key":"nextjs-large-page-data-warning"},{"date":"2023-12-18T00:00:00","title":"2. husky not set as executable 오류","tags":["husky"],"series":["trouble_shooting"],"description":"husky not set as executable 오류 해결하기","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/5b9bd72c-fbb3-487d-afbb-b3127e4a77d0","published":true,"path":"husky-precommit-unauthorized.mdx","key":"husky-precommit-unauthorized"},{"date":"2024-02-13T00:00:00","title":"3. npm publish ENEEDAUTH 오류 해결하기","tags":["npm","git"],"series":["trouble_shooting"],"description":"npm publish ENEEDAUTH 오류. npm login 실패 오류 해결하기","thumbnail":"https://github.com/COYO-HM/coyo-ui/assets/56423604/ce77552f-20d5-495d-a9a2-99e44349956b","published":true,"path":"error-emeedauth.mdx","key":"error-emeedauth"},{"date":"2024-08-24T00:00:00","title":"4. assignInlineVars 사용시에 nextjs warning 해결하기","tags":["nextjs","vanilla_extract"],"series":["trouble_shooting"],"description":"nextjs 환경에서 vanilla-extract assignInlineVars 사용시에 `Warning: Only plain objects can be passed to Client Components from Server Components. Classes or other objects with methods are not supported.` warning 해결하기","thumbnail":"https://github.com/user-attachments/assets/233542e4-436d-4a51-a052-a16605deef28","published":true,"path":"assignInlineVars-to-client-from-server.mdx","key":"assignInlineVars-to-client-from-server"},{"date":"2024-09-11T00:00:00","title":"5. TypeScript 2802 error(downlevelIteration, target) 오류 해결하기","tags":["typescript"],"series":["trouble_shooting"],"description":"TypeScript 2802 error(downlevelIteration, target) 오류에 대해 알아보고 해결해보기","thumbnail":"https://github.com/user-attachments/assets/ae48b518-5410-49c9-9a47-6377ce2f4479","published":true,"path":"error-ts2802.mdx","key":"error-ts2802"}],"key":"trouble_shooting"}],"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"️-문제\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#️-문제\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"⚠️ 문제\"]\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"https://github.com/user-attachments/assets/6532f868-e772-46d7-8526-eae4b2319499\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"code-highlight\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"TS2802: Type NodeListOf<HTMLButtonElement> can only be iterated through when using the --downlevelIteration flag or with a --target of es2015 or higher.\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"해당 오류는 ECMAScript 2015(ES6)를 지원하지 않는 환경에서 \", _jsx(_components.code, {\n        children: \"NodeListOf<HTMLButtonElement>\"\n      }), \"와 같은 ES6 열거형(Iterable) 객체를 열거하려고 할 때 발생합니다.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"-해결\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#-해결\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"🔧 해결\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"오류 문에 적혀있는 대로 해결해 봅시다.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"방법-1-downleveliteration-사용\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#방법-1-downleveliteration-사용\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"방법 1. \", _jsx(_components.code, {\n        children: \"downlevelIteration\"\n      }), \" 사용\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"tsconfig.json\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"compilerOptions\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\t  \", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"target\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"es5\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"downlevelIteration\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\t\", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"방법-2-es6이상으로-target을-지정\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#방법-2-es6이상으로-target을-지정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"방법 2. es6이상으로 target을 지정\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"현재 \", _jsx(_components.code, {\n        children: \"tsconfig.json\"\n      }), \" 이 \", _jsx(_components.code, {\n        children: \"target\"\n      }), \" 지정이 되어 있지 않아 \", _jsx(_components.code, {\n        children: \"esnext\"\n      }), \"로 \", _jsx(_components.code, {\n        children: \"target\"\n      }), \" 지정해주었습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"tsconfig.json\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"compilerOptions\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\t  \", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"target\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"esnext\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\t\", _jsx(_components.span, {\n            className: \"token spread operator\",\n            children: \"...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"해결완료\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#해결완료\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"해결완료\"]\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"https://github.com/user-attachments/assets/443e9caa-e159-402b-b77d-fe2caf0a3071\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"저는 방법 1의 경우 빌드된 파일의 크기가 다소 커져서 방법 2를 사용해서 해결했습니다.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}