{"pageProps":{"post":{"frontMatter":{"date":"2022-09-15T00:00:00","title":"URI와 URL","tags":["Network"],"description":"","published":false},"body":"# URI\r\n\r\n> URI(Uniform Resource Identifier)\r\n>\r\n> 특정 리소스를 식별하는 <span className=\"yellow\">통합 자원 식별자</span>를 의미한다.<br/>\r\n> 웹 기술에서 사용하는 모든 리소스(논리적 또는 물리적 리소스)를 식별하는 고유한 문자열 시퀀스이다.\r\n\r\n- Uniform : 리소스를 식별하는 통일된 방식\r\n- Resource : URI로 식별 가능한 모든 자원\r\n- Identifier : 다른 항목과 구분하기 위해 필요한 고유한 정보\r\n\r\n## URI의 구조\r\n\r\n```\r\nscheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]\r\n```\r\n\r\n1. `scheme`: 사용할 프로토콜을 뜻하며 웹에서는 http 또는 https를 사용\r\n2. `user`, `password`: (서버에 있는) 데이터에 접근하기 위한 사용자의 이름과 비밀번호\r\n3. `host`와 `port`: 접근할 대상(서버)의 호스트명과 포트번호\r\n4. `path`: 접근할 대상(서버)의 경로에 대한 상세 정보\r\n5. `query`: 접근할 대상에 전달하는 추가적인 정보(parameter)\r\n6. `fragment`: 메인 리소스 내에 존재하는 서브 리소스에 접근할 때 이를 식별하기 위한 정보\r\n\r\n# URL\r\n\r\n> URL(Uniform Resource Locator)\r\n>\r\n> 흔히 웹 주소라고 말하는 것이며, 컴퓨터 네트워크 상에서 리소스의 위치를 알려주기 위한 규약이다.<br/>\r\n> URI의 속하는 부분 집합이다.\r\n\r\n# URI VS. URL\r\n\r\n<aside>\r\n\r\n- URI는 식별하고, URL은 위치를 가르킨다.\r\n- URI의 속하는 부분 집합이다.\r\n\r\n</aside>\r\n","fields":{"slug":"blog/network/url-uri"},"path":"C:/Users/dayeo/YODA/git/Personal Project/coyo-log/content/blog/network/url-uri.md"},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"uri\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#uri\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"URI\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"URI(Uniform Resource Identifier)\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"특정 리소스를 식별하는 \", _jsx(\"span\", {\n          className: \"yellow\",\n          children: \"통합 자원 식별자\"\n        }), \"를 의미한다.\", _jsx(\"br\", {}), \"\\r\\n웹 기술에서 사용하는 모든 리소스(논리적 또는 물리적 리소스)를 식별하는 고유한 문자열 시퀀스이다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Uniform : 리소스를 식별하는 통일된 방식\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Resource : URI로 식별 가능한 모든 자원\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Identifier : 다른 항목과 구분하기 위해 필요한 고유한 정보\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"uri의-구조\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#uri의-구조\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"URI의 구조\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"code-highlight\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"scheme\"\n        }), \": 사용할 프로토콜을 뜻하며 웹에서는 http 또는 https를 사용\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"user\"\n        }), \", \", _jsx(_components.code, {\n          children: \"password\"\n        }), \": (서버에 있는) 데이터에 접근하기 위한 사용자의 이름과 비밀번호\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"host\"\n        }), \"와 \", _jsx(_components.code, {\n          children: \"port\"\n        }), \": 접근할 대상(서버)의 호스트명과 포트번호\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \": 접근할 대상(서버)의 경로에 대한 상세 정보\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"query\"\n        }), \": 접근할 대상에 전달하는 추가적인 정보(parameter)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"fragment\"\n        }), \": 메인 리소스 내에 존재하는 서브 리소스에 접근할 때 이를 식별하기 위한 정보\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"url\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#url\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"URL\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"URL(Uniform Resource Locator)\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"흔히 웹 주소라고 말하는 것이며, 컴퓨터 네트워크 상에서 리소스의 위치를 알려주기 위한 규약이다.\", _jsx(\"br\", {}), \"\\r\\nURI의 속하는 부분 집합이다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"uri-vs-url\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#uri-vs-url\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"URI VS. URL\"]\n    }), \"\\n\", _jsx(\"aside\", {\n      children: _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"URI는 식별하고, URL은 위치를 가르킨다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"URI의 속하는 부분 집합이다.\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tags":[{"tag":"React","count":10},{"tag":"JavaScript","count":9},{"tag":"TypeScript","count":8},{"tag":"Network","count":6},{"tag":"NextJS","count":2},{"tag":"Redux","count":2},{"tag":"recoil","count":2},{"tag":"styled-components","count":2},{"tag":"Git","count":2},{"tag":"GithubPage","count":1},{"tag":"Algorithm","count":1},{"tag":"npm","count":1},{"tag":"SCSS","count":1},{"tag":"CSS","count":1},{"tag":"Emotion","count":1},{"tag":"Gatsby","count":1},{"tag":"react-beautiful-dnd","count":1},{"tag":"react-hook-form","count":1},{"tag":"react-helmet","count":1},{"tag":"react-query","count":1},{"tag":"react-apexcharts","count":1},{"tag":"Jest","count":1},{"tag":"Lodash","count":1}]},"__N_SSG":true}