{"pageProps":{"post":{"frontMatter":{"date":"2022-09-05T00:00:00","title":"Immutability","tags":["JavaScript"],"description":"Immutability","published":false},"body":"### Immutability\r\n\r\n> Immutability(변경불가성)는 객체가 생성된 이후 그 상태를 변경할 수 없는 디자인 패턴\r\n\r\n- JavaScript의 모든 `obejcts`와 `arrays`는 모두 기본적으로 변경 가능(mutable) 하다.\r\n  ```jsx\r\n  const obj = { a: 1, b: 2 };\r\n  // still the same object outside, but the contents have changed\r\n  obj.b = 3;\r\n\r\n  const arr = [\"a\", \"b\"];\r\n  // In the same way, we can change the contents of this array\r\n  arr.push(\"c\");\r\n  arr[1] = \"d\";\r\n  ```\r\n  이를 mutating the object or array(object나 array를 변환)라고 부른다. 메모리에서 똑같은 object나 array를 참조하기에 같은 값을 참조하는 다른 object나 array를 변화하면 기존의 object나 array에서도 새로운 값이 호출된다.\r\n  ⇒ 값을 변경하지 않고(Immutably) 업데이트하려면 코드가 기존 object/array의 복사본을 만든다음 복사본을 수정해야 한다.\r\n  ```jsx\r\n  const obj = {\r\n    a: {\r\n      // To safely update obj.a.c, we have to copy each piece\r\n      c: 3,\r\n    },\r\n    b: 2,\r\n  };\r\n\r\n  const obj2 = {\r\n    // copy obj\r\n    ...obj,\r\n    // overwrite a\r\n    a: {\r\n      // copy obj.a\r\n      ...obj.a,\r\n      // overwrite c\r\n      c: 42,\r\n    },\r\n  };\r\n\r\n  const arr = [\"a\", \"b\"];\r\n  // Create a new copy of arr, with \"c\" appended to the end\r\n  const arr2 = arr.concat(\"c\");\r\n\r\n  // or, we can make a copy of the original array:\r\n  const arr3 = arr.slice();\r\n  // and mutate the copy:\r\n  arr3.push(\"c\");\r\n  ```\r\n\r\n## Map\r\n\r\n---\r\n\r\n## List\r\n\r\n---\r\n","fields":{"slug":"blog/javascript/Immutable"},"path":"C:/Users/dayeo/YODA/git/Personal Project/coyo-log/content/blog/javascript/Immutable.md"},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h3, {\n      id: \"immutability\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#immutability\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Immutability\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Immutability(변경불가성)는 객체가 생성된 이후 그 상태를 변경할 수 없는 디자인 패턴\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"JavaScript의 모든 \", _jsx(_components.code, {\n          children: \"obejcts\"\n        }), \"와 \", _jsx(_components.code, {\n          children: \"arrays\"\n        }), \"는 모두 기본적으로 변경 가능(mutable) 하다.\", \"\\n\", _jsx(_components.pre, {\n          className: \"language-jsx\",\n          children: _jsxs(_components.code, {\n            className: \"language-jsx code-highlight\",\n            children: [_jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" obj \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"a\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"1\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"b\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"2\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// still the same object outside, but the contents have changed\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"obj\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"b\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"3\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\r\\n\"\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" arr \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"[\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"a\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"b\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"]\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// In the same way, we can change the contents of this array\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"arr\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token method function property-access\",\n                children: \"push\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"c\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"arr\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"[\"\n              }), _jsx(_components.span, {\n                className: \"token number\",\n                children: \"1\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"]\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"d\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })]\n          })\n        }), \"\\n\", \"이를 mutating the object or array(object나 array를 변환)라고 부른다. 메모리에서 똑같은 object나 array를 참조하기에 같은 값을 참조하는 다른 object나 array를 변화하면 기존의 object나 array에서도 새로운 값이 호출된다.\\r\\n⇒ 값을 변경하지 않고(Immutably) 업데이트하려면 코드가 기존 object/array의 복사본을 만든다음 복사본을 수정해야 한다.\", \"\\n\", _jsx(_components.pre, {\n          className: \"language-jsx\",\n          children: _jsxs(_components.code, {\n            className: \"language-jsx code-highlight\",\n            children: [_jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" obj \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"a\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// To safely update obj.a.c, we have to copy each piece\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"c\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"3\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"b\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"2\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\r\\n\"\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" obj2 \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// copy obj\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token spread operator\",\n                children: \"...\"\n              }), \"obj\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// overwrite a\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"a\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// copy obj.a\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token spread operator\",\n                children: \"...\"\n              }), \"obj\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"a\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// overwrite c\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token literal-property property\",\n                children: \"c\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"42\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\r\\n\"\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" arr \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"[\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"a\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"b\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"]\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// Create a new copy of arr, with \\\"c\\\" appended to the end\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" arr2 \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" arr\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token method function property-access\",\n                children: \"concat\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"c\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\r\\n\"\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// or, we can make a copy of the original array:\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"const\"\n              }), \" arr3 \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" arr\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token method function property-access\",\n                children: \"slice\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// and mutate the copy:\"\n              }), \"\\r\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"arr3\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token method function property-access\",\n                children: \"push\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"c\\\"\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })]\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"map\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#map\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Map\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"list\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#list\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"List\"]\n    }), \"\\n\", _jsx(_components.hr, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tags":[{"tag":"React","count":10},{"tag":"JavaScript","count":9},{"tag":"TypeScript","count":8},{"tag":"Network","count":6},{"tag":"NextJS","count":2},{"tag":"Redux","count":2},{"tag":"recoil","count":2},{"tag":"styled-components","count":2},{"tag":"Git","count":2},{"tag":"GithubPage","count":1},{"tag":"Algorithm","count":1},{"tag":"npm","count":1},{"tag":"SCSS","count":1},{"tag":"CSS","count":1},{"tag":"Emotion","count":1},{"tag":"Gatsby","count":1},{"tag":"react-beautiful-dnd","count":1},{"tag":"react-hook-form","count":1},{"tag":"react-helmet","count":1},{"tag":"react-query","count":1},{"tag":"react-apexcharts","count":1},{"tag":"Jest","count":1},{"tag":"Lodash","count":1}]},"__N_SSG":true}