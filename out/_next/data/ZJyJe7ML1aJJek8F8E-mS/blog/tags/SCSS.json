{"pageProps":{"posts":[{"frontMatter":{"date":"2023-02-02T00:00:00","title":"TEST","tags":["React","TypeScript","Redux","SCSS","CSS","Network"],"description":"개발용 테스트 문서입니다. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","published":false},"body":"# 설치\r\n\r\n```bash\r\nnpm install @reduxjs/toolkit\r\n\r\nyarn add @reduxjs/toolkit\r\n\r\n```\r\n\r\n## HEADER 2\r\n\r\n### HEADER 3\r\n\r\n#### HEADER 4\r\n\r\n##### HEADER 5\r\n\r\n###### HEADER 6\r\n\r\n# Store\r\n\r\n```TypeScript\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nexport const store = configureStore({\r\n  reducer: {},\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n```\r\n\r\n`index.tsx`\r\n\r\n```TypeScript\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n```\r\n\r\n# `UseDispatch`, `UseSelector`\r\n\r\n```TypeScript\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { AppDispatch, RootState } from '../Store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n```\r\n\r\n# CreateSlice\r\n\r\n`ExampleReducer.ts`\r\n\r\n```TypeScript\r\ninterface IExampleState {\r\n\t// reducer type들 표시\r\n\tuserInfo: {name: string, id: string} | null\r\n}\r\n\r\nconst initialState: IExampleState = {\r\n\t// 초기 상태 설정\r\n\tuserInfo: null\r\n}\r\n\r\nexport const ExampleSlice = createSlice({\r\n\tname: 'EXAMPLE',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tupdateName: (state, action) => {\r\n\t\t\tstate.userInfo: {\r\n\t\t\t\t...state.userInfo,\r\n\t\t\t\taction.payload\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder.addcase(getUserInfoAsync.fullfilled, (state, {payload}) => {\r\n\t\t\tstate.userInfo = payload\r\n\t\t})\r\n\t}\r\n})\r\n\r\nexport const { updateName } = ExampleSlice.actions\r\nexport const ExampleReducer = {\r\n\texample: ExampleSlice.reducer\r\n}\r\n```\r\n\r\n# CreateAsyncThunk\r\n\r\n```TypeScript\r\nexport const getUserInfoAsync = createAsyncThunk<\r\n  {\r\n    /*성공시에 출력될 data의 type*/\r\n  },\r\n  {\r\n    /*param의 type*/\r\n  }\r\n>('EXAMPLE/getUserInfoAsync', async (param) => await axios.method('url', param));\r\n```\r\n\r\n# 참조\r\n\r\n- [Redux-ToolKit Docs](https://redux-toolkit.js.org/tutorials/quick-start)\r\n\r\n# 12321$-+\\_\r\n","fields":{"slug":"blog/test/test"},"path":"C:/Users/dayeo/YODA/git/Personal Project/coyo-log/content/blog/test/test.mdx"}],"tags":[{"tag":"React","count":10},{"tag":"JavaScript","count":9},{"tag":"TypeScript","count":8},{"tag":"Network","count":6},{"tag":"NextJS","count":2},{"tag":"Redux","count":2},{"tag":"recoil","count":2},{"tag":"styled-components","count":2},{"tag":"Git","count":2},{"tag":"GithubPage","count":1},{"tag":"Algorithm","count":1},{"tag":"npm","count":1},{"tag":"SCSS","count":1},{"tag":"CSS","count":1},{"tag":"Emotion","count":1},{"tag":"Gatsby","count":1},{"tag":"react-beautiful-dnd","count":1},{"tag":"react-hook-form","count":1},{"tag":"react-helmet","count":1},{"tag":"react-query","count":1},{"tag":"react-apexcharts","count":1},{"tag":"Jest","count":1},{"tag":"Lodash","count":1}],"tag":"SCSS"},"__N_SSG":true}