{"pageProps":{"posts":[{"frontMatter":{"date":"2022-09-05T00:00:00","title":"JavaScript map과 forEach 비교","tags":["JavaScript"],"description":"JavaScript map과 forEach 비교하기","published":true},"body":"# **Array.prototype.forEach**\r\n\r\n---\r\n\r\n> `forEach()`\r\n> for문을 대체할 수 있는 함수로 `forEach` method는 자신의 내부에서 반복문을 실행한다.\r\n> 내부에서 반복문을 통해 자신을 호출한 배열을 순회하면서 수행해야할 처리를 콜백 함수로 전달받아 반복 호출한다.\r\n\r\n- `forEach` method는 원본 배열을 변경하지 않는다.\r\n- `forEach` method의 반환값은 언제나 `undefined`이다.\r\n\r\n```jsx\r\nconst num = [1, 2, 3];\r\nconst result = [];\r\n\r\nnum.forEach((n) => result.push(n + 10));\r\n\r\nconsole.log(result); // output: [11, 12, 13]\r\n```\r\n\r\n# **Array.prototype.map**\r\n\r\n---\r\n\r\n> `map()`\r\n> 자신을 호출한 배열의 모든 요소를 순회하면서 인수로 전달받은 콜백 함수를 반복 호출한다.\r\n> 그리고 콜백 함수의 반환값들로 구성된 <span className=\"yellow\">새로운 배열을 반환</span>한다.\r\n\r\n- `map` method는 원본 배열을 변경하지 않는다. 단, `callback` 함수에 의해서 변형될 수는 있다.\r\n\r\n  ```jsx\r\n  var kvArray = [\r\n    { key: 1, value: 10 },\r\n    { key: 2, value: 20 },\r\n    { key: 3, value: 30 },\r\n  ];\r\n\r\n  var reformattedArray = kvArray.map(function (obj) {\r\n    var rObj = {};\r\n    rObj[obj.key] = obj.value;\r\n    return rObj;\r\n  });\r\n  // reformattedArray는 [{1:10}, {2:20}, {3:30}]\r\n\r\n  // kvArray는 그대로\r\n  // [{key:1, value:10},\r\n  //  {key:2, value:20},\r\n  //  {key:3, value: 30}]\r\n  ```\r\n\r\n- `map` method에서는 원본 배열의 원소와 일대일 mapping이 진행되기 때문에 원본 배열과 mapping 후 배열의 길이는 항상 같다.\r\n- `map`은 `callback` 함수를 각각의 요소에 대해 한번씩 순서대로 불러 그 함수의 반환값으로 새로운 배열을 만든다. \r\n  `callback`함수는 (`undefined`도 포함해서) 배열 값이 들어있는 인덱스에 대해서만 호출된다.\r\n  즉, 값이 삭제되거나 아직 값이 할당/정의되지 않은 인덱스에 대해서는 호출되지 않는다.\r\n- String에도 사용 가능\r\n  ```jsx\r\n  var map = Array.prototype.map;\r\n  var a = map.call(\"Hello World\", function (x) {\r\n    return x.charCodeAt(0);\r\n  });\r\n  // a는 이제 [72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]\r\n  ```\r\n\r\n# 참조\r\n\r\n- [MDN Array.prototype.map()](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\r\n- [MDN Array.prototype.forEach()](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\r\n","fields":{"slug":"blog/javascript/forEach-map"},"path":"C:/Users/dayeo/YODA/git/Personal Project/coyo-log/content/blog/javascript/forEach-map.mdx"},{"frontMatter":{"date":"2022-01-10T00:00:00","title":"Lodash 자주 사용하는 함수 정리","tags":["React","TypeScript","Lodash","JavaScript"],"description":"자주 사용하는 lodash 함수 정리","published":true},"body":"# Array 관련 함수\r\n\r\n## `uniq`\r\n\r\n> 배열 원소 중복 제거\r\n>\r\n> ```tsx\r\n> uniq<T>(array: List<T> | null | undefined): T[];\r\n> // arg: array\r\n> // return: array\r\n> ```\r\n\r\n```tsx\r\nconst siteList = [0, 1, 1, 2];\r\nconst uniqSiteList = uniq(siteList); // [0, 1, 2]\r\n```\r\n\r\n# Collection 관련 함수\r\n\r\n## `sortby`\r\n\r\n> collection 값들을 원하는 필드를 기준으로 오름차순으로 정렬\r\n>\r\n> ```tsx\r\n> sortBy(collection, [(iteratees = [_.identity])]);\r\n>\r\n> //collection: 정렬 대상\r\n> //[iteratees=[_.identity]] 정렬 기준\r\n>\r\n> // => return 정렬된 새로운 array\r\n> ```\r\n\r\n- 여러 개의 필드값으로도 정렬 가능\r\n\r\n```javascript\r\nsortBy(정렬을 원하는 컬렉션, [정렬 기준 필드값 1, 정렬 기준 필드값 2]);\r\n```\r\n\r\n- 내림차 순으로 정렬하기 위해서는, `reverse()` 사용\r\n\r\n```javascript\r\nsortBy(정렬을 원하는 컬렉션, 정렬 기준 필드값).reverse();\r\n```\r\n\r\n```tsx\r\nconst users = [\r\n  { user: \"fred\", age: 48 },\r\n  { user: \"barney\", age: 36 },\r\n  { user: \"fred\", age: 40 },\r\n  { user: \"barney\", age: 34 },\r\n];\r\n\r\nconst sortByFunc = sortBy(users, [\r\n  function (o) {\r\n    return o.user;\r\n  },\r\n]);\r\nconsole.log(sortByFunc);\r\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\r\n\r\nconst sortByTwoArg = sortBy(users, [\"user\", \"age\"]);\r\nconsole.log(sortByTwoArg);\r\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\r\n```\r\n\r\n# Lang 관련 함수\r\n\r\n## `clonedeep`\r\n\r\n> 객체 복사\r\n\r\n# Object 관련 함수\r\n\r\n## `get`\r\n\r\n> 객체에서 원하는 값 찾기\r\n\r\n```javascript\r\nget(찾을 장소, 가져올 키, 기본 값);\r\n```\r\n\r\n# 참조\r\n\r\n- [lodash 공식 문서](https://lodash.com/docs/4.17.15#compact)\r\n","fields":{"slug":"blog/react/lodash"},"path":"C:/Users/dayeo/YODA/git/Personal Project/coyo-log/content/blog/react/lodash.mdx"}],"tags":[{"tag":"React","count":3},{"tag":"TypeScript","count":3},{"tag":"Network","count":3},{"tag":"JavaScript","count":2},{"tag":"Redux","count":1},{"tag":"Emotion","count":1},{"tag":"Gatsby","count":1},{"tag":"Lodash","count":1}],"tag":"JavaScript"},"__N_SSG":true}