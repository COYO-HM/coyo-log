{"pageProps":{"post":{"frontMatter":{"date":"2023-02-22T00:00:00","title":"Github Page로 React 프로젝트 무료로 배포해보기","tags":["JavaScript","React","GithubPage"],"description":"Github Page로 CRA로 만든 프로젝트를 무료로 배포해보자","published":true},"body":"> Github Page\n>\n> github repository에 올린 `javaScript` 프로젝트를 배포하여 정적 웹 사이트를 무료로 호스팅할 수 있게 하는 서비스이다.\n\n이전에 `react`로 만든 프로젝트를 한번 Github Page로 배포해보자.\n\n# Project Github page 라이브러리 설치\n\n```jsx\nnpm i gh-pages --dev\n```\n\n# Package.json 설정하기\n\n`package.json` 에 다음과 같이 홈페이지 주소를 추가해준다.\n\n```jsx\n \"homepage\": \"https://사용자 아이디.github.io/레포지토리 이름/\",\n```\n\n![homepage](/static/images/blog/github-page-publish-01.png)\n\n배포를 위해 `deploy`를 추가해준다.\n\n![deploy](/static/images/blog/github-page-publish-02.png)\n\n다음 명령어를 입력해 배포해준다.\n\n```bash\nnpm run deploy\n```\n\n# Github Page Repository에서 설정\n\n- Repository 메뉴에서 Settings 메뉴로 들어가준다.\n\n![Settings](/static/images/blog/github-page-publish-03.png)\n\n- Settings 메뉴 중에 Pages 메뉴로 들어가면 Branch가 none으로 설정되어 있다.\n\n![Pages](/static/images/blog/github-page-publish-04.png)\n\n- 생성된 gh-pages 브랜치로 설정해준다.\n\n![gh-pages](/static/images/blog/github-page-publish-05.png)\n\n다음과 같이 배포된 것을 확인할 수 있다.\n\n![complete](/static/images/blog/github-page-publish-06.png)\n\n# 참조\n\n- [Github Docs](https://docs.github.com/ko/pages)\n","fields":{"slug":"blog/git/github-page-publish"},"path":"/Users/yoda/Workspace/COYO-HM.github.io/content/blog/git/github-page-publish.mdx"},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    pre: \"pre\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Github Page\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"github repository에 올린 \", _jsx(_components.code, {\n          children: \"javaScript\"\n        }), \" 프로젝트를 배포하여 정적 웹 사이트를 무료로 호스팅할 수 있게 하는 서비스이다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"이전에 \", _jsx(_components.code, {\n        children: \"react\"\n      }), \"로 만든 프로젝트를 한번 Github Page로 배포해보자.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"project-github-page-라이브러리-설치\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#project-github-page-라이브러리-설치\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Project Github page 라이브러리 설치\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsx(_components.code, {\n        className: \"language-jsx code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"npm i gh\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"pages \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"--\"\n          }), \"dev\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"packagejson-설정하기\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#packagejson-설정하기\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Package.json 설정하기\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"package.json\"\n      }), \" 에 다음과 같이 홈페이지 주소를 추가해준다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsx(_components.code, {\n        className: \"language-jsx code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\" \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"homepage\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"https://사용자 아이디.github.io/레포지토리 이름/\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-01.png\",\n        alt: \"homepage\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"배포를 위해 \", _jsx(_components.code, {\n        children: \"deploy\"\n      }), \"를 추가해준다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-02.png\",\n        alt: \"deploy\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음 명령어를 입력해 배포해준다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"npm\"\n          }), \" run deploy\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"github-page-repository에서-설정\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#github-page-repository에서-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Github Page Repository에서 설정\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Repository 메뉴에서 Settings 메뉴로 들어가준다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-03.png\",\n        alt: \"Settings\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Settings 메뉴 중에 Pages 메뉴로 들어가면 Branch가 none으로 설정되어 있다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-04.png\",\n        alt: \"Pages\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"생성된 gh-pages 브랜치로 설정해준다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-05.png\",\n        alt: \"gh-pages\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음과 같이 배포된 것을 확인할 수 있다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/static/images/blog/github-page-publish-06.png\",\n        alt: \"complete\"\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"참조\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#참조\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"참조\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.github.com/ko/pages\",\n          children: \"Github Docs\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tags":[{"tag":"JavaScript","count":7},{"tag":"React","count":6},{"tag":"TypeScript","count":4},{"tag":"Network","count":3},{"tag":"Redux","count":2},{"tag":"GithubPage","count":1},{"tag":"Emotion","count":1},{"tag":"Gatsby","count":1},{"tag":"Redux-Persist","count":1},{"tag":"CS","count":1},{"tag":"Styled-Components","count":1},{"tag":"CSS","count":1},{"tag":"Python3","count":1},{"tag":"Lodash","count":1}]},"__N_SSG":true}