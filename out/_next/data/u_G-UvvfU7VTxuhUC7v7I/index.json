{"pageProps":{"recentPosts":[{"frontMatter":{"date":"2024-01-22T00:00:00","title":"Vite + React + TypeScript 환경에서 Emotion Css Prop 사용하기","tags":["vite","react","emotion","typescript"],"series":[],"description":"vite + react + typescript 환경에서 emotion css prop 사용하기","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/a8924712-3db6-4ab6-abc8-eb2795ff4121","published":true,"path":"vite-react-ts-emotion-props-config.mdx","key":"vite-react-ts-emotion-props-config"},"body":"`Vite` + `React` + `TypeScript` 환경에서 `Emotion` `css prop`를 사용하니 다음과 같이 계속 오류가 나는 것을 확인할 수 있었습니다.\n\n![Marquee-error](https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/941a92c1-5c15-459b-9709-663013f390bb)\n\n\n\n검색해보니 `TypeScript` 말고도 `Vite`에서도 `css prop`를 사용하려면 추가 설정을 해줘야 하는 것을 알게 되어서 한번 정리해두려고 합니다.\n\n# TypeScript 설정\n\n`tsconfig.json`\n\n```json\n{\n  \"compilerOptions\": {\n    ...\n    \"jsx\": \"react-jsx\",\n    \"jsxImportSource\": \"@emotion/react\",\n    ...\n  },\n  ...\n}\n```\n\n[[emotion 공식 문서] typescript](https://emotion.sh/docs/typescript)\n\n# Vite 설정\n\n`vite.config.ts`\n\n```tsx\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    react({\n      jsxImportSource: \"@emotion/react\",\n      babel: {\n        plugins: [\"@emotion/babel-plugin\"],\n      },\n    }),\n  ],\n});\n```\n\n# 참조\n\n- [Configure Emotion with your Vite React Project](https://dev.to/glocore/configure-emotion-with-your-vite-react-project-7jl)\n- [[emotion 공식 문서] typescript](https://emotion.sh/docs/typescript)","fields":{"slug":"vite-react-ts-emotion-props-config"},"path":"vite-react-ts-emotion-props-config.mdx"},{"frontMatter":{"date":"2024-01-10T00:00:00","title":"NextJS 블로그 giscus 적용하기","tags":["nextjs","giscus","typescript","utterances"],"series":["blog"],"description":"Next.js 블로그 utterances에서 giscus로 마이그레이션해보자","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/3af4ab5c-7099-4d79-9a30-8c9e8f7504af","published":true,"path":"utterances-to-giscus.mdx","key":"utterances-to-giscus"},"body":"저도 블로그나 동영상을 보고 댓글보다는 흔히 말하는 좋아요 등을 통해 포스트에 리액션을 남기는 것을 선호하는 편입니다.\n\n현재 블로그 댓글 기능은 `utterance`를 사용하여 댓글을 남길수는 있지만 간단하게 반응을 남길 수 없습니다.\n\n`utterance` 도 충분히 사용하는데 불편함은 없었지만 `utterance`과 마찬가지로 광고도 없으며 다양한 기능을 추가적으로 제공 중인 `giscus`로 마이그레이션 해보려고 합니다.\n\n# giscus 알아보기\n\n`giscus`에서 포스트에 대한 간단한 리액션을 남길 수도 있을 뿐더러 다양한 기능을 제공해주고 있습니다.\n\n- 댓글 시간순 정렬/인기순 정렬\n- 대댓글 작성\n- 다양한 테마\n- 다국어 지원(한글 포함)\n\n# giscus 적용하기\n\n`giscus`를 적용하기 위해서 다음과 같은 조건을 만족해야 합니다.\n\n![출처: [giscus](https://giscus.app/ko)](https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/f583e370-dfae-4d68-a406-9e61355970eb)\n\n출처: [giscus](https://giscus.app/ko)\n\n## Discussions 활성화하기\n\ngiscus를 사용하기 위해서는 우선 해당 github repository의 discussions 기능이 활성화되어 있어야 합니다.\n\n해당하는 repository의 Setting > General > Features에서 discussions을 활성화시킬 수 있습니다.\n\n<img alt={\"github_setting\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/1aabd2f5-d989-4394-a540-7db263dc6dab\"} style={{margin:\"0 0 10px\"}}/>\n<img alt={\"github_setting_feature\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/dc4fc4fa-5af1-46e6-8074-c00a8fac40d2\"}/>\n\n\n\n## Discussions Category 생성\n\n자동으로 생성된 카테고리(일반적으로 General을 선택합니다)를 사용해도 되지만 저는 댓글을 위한 카테고리를 생성해주었습니다.\n\n<img alt={\"github_discussions\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/537c68ee-2c2b-482f-be73-207ea3e7b7e6\"} style={{margin:\"0 0 10px\"}}/>\n<img alt={\"github_discussions_category\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/e5a95fc2-1001-41a4-9dfe-d52f8fcebe7c\"}/>\n\n다른 사용자들은 댓글이 리플만 달 수 있도록 Announcement를 적용해줍니다.\n\n<img alt={\"github_create_category\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/e17cd1cd-e7b4-4b2e-acb5-f3da667456ff\"}/>\n\n## Giscus 설치하기\n\n이어서 [giscus 설치 페이지](https://github.com/apps/giscus) 에 들어가서 giscus를 설치해줍니다.\n\n<img alt={\"giscus_install\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/03c33e5f-19a2-4ebe-bf76-71b6278843fd\"}/>\n\ndiscussions을 활성화한 repository를 선택해주도록 합니다.\n\n<img alt={\"giscus_install_setting\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/4a6ff6ff-ee18-4c91-a085-435ac14d4f90\"}/>\n\n[giscus 홈페이지](https://giscus.app/ko) 에 들어가서 설정을 해줍니다. 언어와 저장소를 입력하고 댓글을 올릴 discussions 카데고리를 지정해줍니다.\n\n<img alt={\"giscus_setting_1\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/1175a586-412d-4e02-805c-672fa34af066\"} style={{margin:\"0 0 10px\"}}/>\n<img alt={\"giscus_setting_2\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/7975cd56-8caf-4421-8bc2-8bf7f65dfbbc\"}/>\n\n설정을 완료했으면 아래와 같이 script 코드가 나옵니다. 이를 잘 메모장에 복사두거나 따로 저장해주도록 합니다.\n\n<img alt={\"giscus_setting_3\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/e8b05ea3-94be-4d19-b0bf-5324f5177c39\"}/>\n\n## 코드 작성하기\n\n`next.js` 블로그의 경우 위의 스크립트 코드를 바로 사용할 수 없습니다. `Giscus` 컴포넌트를 새로 만들어 주고 다음과 같이 코드를 작성합니다. 해당 코드는 [git issue 에 올라온 코드](https://github.com/utterance/utterances/issues/161)를 참고하였습니다. `script` attribute의 `key`와 `value`는 위 giscus에서 제공한 값을 사용해주도록 합니다.\n\n```bash\nimport { useEffect, useRef } from \"react\";\nimport useTheme from \"@hooks/useTheme\";\n\nconst NEXT_PUBLIC_REPO_ID = process.env.NEXT_PUBLIC_REPO_ID as string;\nconst NEXT_PUBLIC_CATEGORY_ID = process.env.NEXT_PUBLIC_CATEGORY_ID as string;\n\nconst Giscus = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { isDarkTheme } = useTheme();\n\n  // https://github.com/giscus/giscus/tree/main/styles/themes\n  const theme = isDarkTheme ? \"dark\" : \"light\";\n\n  // https://github.com/utterance/utterances/issues/161\n  useEffect(() => {\n    if (!ref.current || ref.current.hasChildNodes()) return;\n\n    const scriptElem = document.createElement(\"script\");\n    scriptElem.src = \"https://giscus.app/client.js\";\n    scriptElem.async = true;\n    scriptElem.crossOrigin = \"anonymous\";\n\n    scriptElem.setAttribute(\"data-repo\", \"COYO-HM/COYO-HM.github.io\");\n    scriptElem.setAttribute(\"data-repo-id\", NEXT_PUBLIC_REPO_ID);\n    scriptElem.setAttribute(\"data-category\", \"Comments\");\n    scriptElem.setAttribute(\"data-category-id\", NEXT_PUBLIC_CATEGORY_ID);\n    scriptElem.setAttribute(\"data-mapping\", \"pathname\");\n    scriptElem.setAttribute(\"data-strict\", \"0\");\n    scriptElem.setAttribute(\"data-reactions-enabled\", \"1\");\n    scriptElem.setAttribute(\"data-emit-metadata\", \"0\");\n    scriptElem.setAttribute(\"data-input-position\", \"bottom\");\n    scriptElem.setAttribute(\"data-theme\", theme);\n    scriptElem.setAttribute(\"data-lang\", \"ko\");\n\n    ref.current.appendChild(scriptElem);\n  }, [theme]);\n\n  // https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#isetconfigmessage\n  useEffect(() => {\n    const iframe = document.querySelector<HTMLIFrameElement>(\n      \"iframe.giscus-frame\"\n    );\n    iframe?.contentWindow?.postMessage(\n      { giscus: { setConfig: { theme } } },\n      \"https://giscus.app\"\n    );\n  }, [theme]);\n\n  return (\n    <div className={\"py-5\"}>\n      <section ref={ref} />\n    </div>\n  );\n};\n\nexport default Giscus;\n```\n\n위의 컴포넌트를 댓글이 들어갈 부분에 넣어주면 완성입니다!\n\n# 기존 utterances에 있던 댓글 옮기기\n\n만약 저처럼 utterances에 있다면 해당 repository > issues에 댓글에 해당하는 issue에 label을 붙여줍니다.\n\n저 같은 경우에는 `comment` 라벨을 붙여주었습니다.\n\n<img alt={\"github_issues\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/80186d0a-bbae-4331-a502-19be1988ad7f\"}/>\n\n그 다음 label 버튼을 눌러 label 관리에 들어가서 comment의 convert to discussions 을 눌러줍니다.\n\n<img alt={\"github_issues_label\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/2f0e99c4-1c9b-4dfd-b398-f61061c10299\"}/>\n\n위에서 댓글 관리용으로 지정해둔 discussions category인 comments로 전환해줍니다.\n\n<img alt={\"github_issues_label_setting\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/3ae9334e-bfaa-4017-bb0b-61dc0e973205\"}/>\n\ncomments에 기존 댓글이 잘 들어간 것을 확인할 수 있습니다.\n\n<img alt={\"github_discussions_comments\"} src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/c744020b-a17e-4429-81c7-892681111e86\"}/>\n\n# 참조\n\n- [Moving from utterances to giscus](https://shipit.dev/posts/from-utterances-to-giscus.html)\n- [giscus](https://giscus.app/ko)\n- https://github.com/utterance/utterances/issues/161","fields":{"slug":"utterances-to-giscus"},"path":"utterances-to-giscus.mdx"},{"frontMatter":{"date":"2024-01-04T00:00:00","title":"컴퓨터 네트워크의 기본","tags":["network","computer_science"],"series":["network_note"],"description":"컴퓨터 네트워크 및 인터넷 역사","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/241afd74-559a-417b-aabf-757027c20513","published":true,"path":"network-note-01.mdx","key":"network-note-01"},"body":"<aside>\n  💡 해당 포스트는 [해당 강의](http://www.kocw.net/home/cview.do?lid=52e88746ed8b2c74)를 듣고 정리한 내용입니다.\n\n</aside>\n\n# Network structure\n\n## Network edge\n\n: 일반적인 랩탑, 단말기, 서버 또는 웹 브라우저 같은 네트워크 가장자리에 존재하는 프로그램들\n\n## Network core\n\n: 메세지를 전달해주는 특수한 용도의 장비인 라우터들이 존재하는 부분\n\n<aside>\n  💡 라우터\n\n  네트워크 안에 존재하는 특수한 컴퓨터, 사용자들이 보낸 메세지를 목적지까지 전달하는 역할\n\n</aside>","fields":{"slug":"network-note-01"},"path":"network-note-01.mdx"},{"frontMatter":{"date":"2023-12-18T00:00:00","title":"husky not set as executable 오류","tags":["husky"],"series":["trouble_shooting"],"description":"husky not set as executable 오류 해결하기","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/5b9bd72c-fbb3-487d-afbb-b3127e4a77d0","published":true,"path":"husky-precommit-unauthorized.mdx","key":"husky-precommit-unauthorized"},"body":"# ⚠️ 문제\n\n블로그를 배포하던 중에 다음과 같은 오류가 발생하였습니다.\n\n![husky-precommit-unauthorized](https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/1407d749-eac6-46b6-8f2a-89ea956bc6da)\n\n# 🔧 해결\n\n찾아보니까 이는 권한 문제로 권한 문제로 .husky/pre-commit에 권한 설정을 해주면 간단하게 해결됩니다.\n\n`husky/pre-commit` 을 잠깐 삭제해주었다가 다시 생성했는데 그로 인해 발생된 것 같습니다.\n\n```bash\nchmod +x .husky/pre-commit\n```\n\n# 참조\n\n- [githook 실행 오류 (not set as executable)](https://den-shin.tistory.com/77)","fields":{"slug":"husky-precommit-unauthorized"},"path":"husky-precommit-unauthorized.mdx"},{"frontMatter":{"date":"2023-12-17T00:00:00","title":"NextJS에 GA4(Google Analytics) 적용하기","tags":["nextjs","gtag","google_analytics","typescript"],"series":["blog"],"description":"gtag에 알아보고 NextJS 블로그에 gtag4를 적용해보기","published":true,"thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/a5ef6447-15c7-495c-821c-1a254bcb6bfc","path":"nextjs-gtag.mdx","key":"nextjs-gtag"},"body":"# Google Analytics\n\n> Google 애널리틱스는 웹사이트 및 앱에서 데이터를 수집하여 비즈니스에 유용한 정보를 제공하는 보고서를 작성하는 플랫폼입니다.\n>\n> - 웹사이트와 앱 데이터를 모두 수집하여 고객 여정을 더욱 자세히 파악\n> - 세션 기반 데이터 대신 이벤트 기반 데이터 사용\n> - 쿠키 없는 측정, 행동 및 전환 모델링과 같은 개인 정보 보호 설정 포함\n> - 예측 기능으로 복잡한 모델이 없는 가이드 제공\n> - 미디어 플랫폼에 직접 통합하여 웹사이트 또는 앱에서 더 편리하게 작업\n\n출처: [Analytics 소개](https://support.google.com/analytics/topic/14089939?hl=ko&ref_topic=14090456&sjid=16409339143174609399-AP)\n\ngoogle analytics는 google에서 제공하는 내 서비스의 트래픽이나 사용자 유입 등을 파악할 수 있도록 도와주는 분석 도구입니다.\n\n# gtag4 블로그에 적용하기\n\n## 측정 ID 생성하기\n\n우선 [google analytics](https://analytics.google.com/analytics/web/provision/#/provision) 에서 측정 시작을 눌러 계정을 만들어줍니다. 이미 계정이 있으신 경우에는 새 속성을 만들어 주시거나 기존 측정 ID를 사용하시면 됩니다.\n\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/054e9d4b-974a-4458-85ab-074db9402899\"} alt={\"google-analytics-0\"} style={{margin:\"5px auto 20px\"}}/>\n\n계정 이름에 팀 명 혹은 회사명을 입력합니다. 아래의 계정 데이터 공유 설정은 각자 맞게 읽어보고 선택하시면 됩니다. 저는 default로 진행했습니다. 생성 후에도 계정 설정에서 수정하실 수 있습니다.\n\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/0ae8a4dd-9194-4ecf-90bb-16049a8b0204\"} alt={\"google-analytics-1\"} style={{margin:\"5px auto 20px\"}}/>\n\n계속해서 정보를 입력하시고 약관 동의까지 해서 속성까지 생성해 줍니다.\n\n속성까지 생성하면 다음과 같은 홈화면이 나옵니다.\n\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/16d21d56-4c82-4e67-8b9b-73e568e4b1f8\"} alt={\"google-analytics-2\"} style={{margin:\"5px auto 20px\"}}/>\n\n상단의 모든 계정을 클릭하여 자신이 생성한 계정과 속성을 한눈에 볼 수 있습니다.\n\n여기서 태크 지정 도움말 받기를 눌러 웹 스트림 세부 정보를 확인합니다. 아직 받은 정보가 없다면, 설치 안내가 뜨는데 우리는 직접 코드를 작성할 것이기에 닫아주고 세부 정보를 확인해 주도록 합니다.\n\n웹 스트림 세부정보에서 발급받은 측정 ID를 확인하고 복사하실 수 있습니다. 측정 ID는 프로젝트에서 환경 변수로 저장해 줄 것이기에 복사해줍니다.\n\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/76d16c87-c908-4b3a-b06a-9fb757b0978a\"} alt={\"google-analytics-3\"} style={{margin:\"5px auto 20px\"}}/>\n\n## 프로젝트에 gtag 적용하기\n\ngtag를 설치줍니다. 만약 `typescript` 가 아닌 `javascript` + `nextjs` 인 경우에는 [nextjs의 공식 예시](https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics)를 따라주시면 됩니다.\n\n```bash\nnpm install -D @types/gtag.js\n```\n<br/>\n아까 복사해 둔 측정 ID를 .env 파일 안에 환경 변수로 설정합니다.\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/417a70f3-d9a8-4a94-9ff4-0be4d38fcc0b\"} alt={\"env\"} style={{margin:\"5px auto 20px\"}}/>\n<br/>\n루트 디렉토리에 `lib/gtag.ts`  파일을 생성해주고, 다음 코드들을 작성합니다.\n\n`lib/gtag.ts`\n\n```tsx\n  export const GA_TRACKING_ID = process.env.NEXT_PUBLIC_GA_ID as string;\n\n  // https://developers.google.com/analytics/devguides/collection/gtagjs/pages\n  // 페이지 조회 전송을 위한 태그\n  export const pageview = (url: URL) => {\n    window.gtag(\"config\", GA_TRACKING_ID, {\n      page_path: url, // 페이지의 url\n      // page_path 말고도 page_title, page_location, send_page_view 등을 보낼 수 있습니다.\n    });\n  };\n\n  // https://developers.google.com/analytics/devguides/collection/gtagjs/events\n  // 이벤트 전송을 위한 태그로 위의 링크에서 더욱더 자세한 내용을 참조하실 수 있습니다.\n  export const event = (\n    action: Gtag.EventNames,\n    { event_category, event_label, value }: Gtag.EventParams\n  ) => {\n    window.gtag(\"event\", action, {\n      event_category,\n      event_label,\n      value,\n    });\n  };\n```\n\n- Google Analytics 페이지 조회 전송 파라미터 설명\n\n\n    | 이름 | 유형 | 필수 | 기본값 | 설명 |\n    | --- | --- | --- | --- | --- |\n    | page_title | string | 아니요 | document.title | 페이지의 제목입니다. |\n    | page_location | string | 아니요 | location.href | 페이지의 URL입니다. |\n    | page_path | string | 아니요 | location.pathname | 페이지 경로입니다. 재정의되는 경우 이 값은 / 문자로 시작해야 합니다. |\n    | send_page_view | boolean | 아니요 | true | 페이지 조회 전송 여부입니다. |\n\n    출처: [Google 애널리틱스 페이지 조회 측정](https://developers.google.com/analytics/devguides/collection/gtagjs/pages)\n\n\n- Google Analytics 이벤트 전송 파라미터 설명\n\n\n    | 이름 | 유형 | 기본값 | 설명 |\n    | --- | --- | --- | --- |\n    | `action` | string |  | Google 애널리틱스 이벤트 보고서에서 이벤트 액션으로 표시될 값입니다. |\n    | `category` | string | `general` | 이벤트의 카테고리입니다. |\n    | `label` | string |  | 이벤트 라벨입니다. |\n    | `value` | number |  | 이벤트 값으로 표시될 음수가 아닌 정수입니다. |\n\n    출처: [Google 애널리틱스 이벤트 측정](https://developers.google.com/analytics/devguides/collection/gtagjs/events)\n\n\n`pages/_app.tsx`\n\n```tsx\n  import { useRouter } from \"next/router\";\n  import Script from \"next/script\";\n  import Head from \"next/head\";\n  import { useEffect } from \"react\";\n  import * as gtag from \"lib/gtag\";\n  ...\n\n  // https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_app.js\n  const App = ({ Component, pageProps }: AppProps) => {\n    const router = useRouter();\n    useEffect(() => {\n      const handleRouteChange = (url: URL) => {\n        gtag.pageview(url);\n      };\n      router.events.on(\"routeChangeComplete\", handleRouteChange);\n      return () => {\n        router.events.off(\"routeChangeComplete\", handleRouteChange);\n      };\n    }, [router.events]);\n\n    return (\n      <>\n        {process.env.NODE_ENV !== \"development\" && (\n          <>\n            <Head>\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', '${gtag.GA_TRACKING_ID}', {\n                  page_path: window.location.pathname,\n                });\n              `,\n                }}\n              />\n            </Head>\n            {/* Global Site Tag (gtag.js) - Google Analytics */}\n            <Script\n              strategy=\"afterInteractive\"\n              src={`https://www.googletagmanager.com/gtag/js?id=${gtag.GA_TRACKING_ID}`}\n            />\n          </>\n        )}\n        ...\n      </>\n    );\n  };\n\n  export default App;\n```\n<br/>코드까지 작성하면 완성입니다. Google Analytics 에 들어가면 성공적으로 연결된 것을 확인할 수 있습니다!\n\n<img src={\"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/8606eafe-ba20-4a16-9e19-81b51e5d65e3\"} alt={\"google-analytics-done\"} style={{margin:\"5px auto 20px\"}}/>\n\n# 참조\n\n- https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_app.js","fields":{"slug":"nextjs-gtag"},"path":"nextjs-gtag.mdx"}],"tags":[{"tag":"all","count":29},{"tag":"react","count":9},{"tag":"typescript","count":9},{"tag":"javascript","count":9},{"tag":"network","count":5},{"tag":"nextjs","count":4},{"tag":"husky","count":3},{"tag":"git","count":3},{"tag":"emotion","count":2},{"tag":"css","count":2},{"tag":"redux","count":2},{"tag":"axios","count":2},{"tag":"npm","count":1},{"tag":"yarn","count":1},{"tag":"yarn_berry","count":1},{"tag":"vite","count":1},{"tag":"giscus","count":1},{"tag":"utterances","count":1},{"tag":"styled_components","count":1},{"tag":"redux_persist","count":1},{"tag":"python3","count":1},{"tag":"gtag","count":1},{"tag":"google_analytics","count":1},{"tag":"computer_science","count":1},{"tag":"programming","count":1},{"tag":"lodash","count":1},{"tag":"commitlint","count":1},{"tag":"githubpage","count":1},{"tag":"intellij","count":1},{"tag":"gatsby","count":1},{"tag":"framer_motion","count":1},{"tag":"tailwind","count":1}],"allSeriesInfo":{"trouble_shooting":{"title":"⚠️ Trouble Shooting Log","tags":[],"description":"프로젝트 진행 도중 나오는 문제 해결 기록","thumbnail":"https://user-images.githubusercontent.com/56423604/283492423-a261b95e-c0e1-4651-9351-83fc538db17d.png","startDate":"2023-10-09T00:00:00.000Z","endDate":"2023-12-18T00:00:00.000Z","posts":["nextjs-large-page-data-warning","husky-precommit-unauthorized"]},"toy_project":{"title":"Toy Project","tags":[],"description":"소소한 프로젝트들","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/e5565bd4-839d-4c77-9bfc-600ea3990312","startDate":"","endDate":"","posts":[]},"network_note":{"title":"컴퓨터 네트워크 강의 정리","tags":["network"],"description":"컴퓨터 네트워크 강의 내용 정리하기","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/d1f6edca-b29b-4a4a-9149-314bc1e7b31a","startDate":"2024-01-04","endDate":"2024-01-04","posts":["network-note-01"]},"commit-msg-management":{"title":"커밋 메세지 관리하기","tags":["github","git","github_actions","commitlint","semantic-release"],"description":"커밋 메세지로 버전 관리와 변경 로그까지","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/f79f521a-7002-42cd-9931-dbd1e1f16798","startDate":"2023-09-25T00:00:00.000Z","endDate":"2023-10-26T00:00:00.000Z","posts":["husky-commlint","git-commit-template"]},"code_snippets":{"title":"⌨️ Code Snippets","tags":[],"description":"자주 사용하는 코드 조각 모음","thumbnail":"https://user-images.githubusercontent.com/56423604/283492780-cc0b2221-9cbf-497e-8ca1-a93c6539d3b6.png","startDate":"","endDate":"","posts":[]},"blog":{"title":"Blog 제작 과정","tags":[],"description":"블로그 자체 제작기","thumbnail":"https://github.com/COYO-HM/COYO-HM.github.io/assets/56423604/6e3156e2-0623-410b-8b52-011e99b0811f","startDate":"2022-10-23T00:00:00.000Z","endDate":"2024-01-10T00:00:00.000Z","posts":["utterances-to-giscus","nextjs-large-page-data-warning","nextjs-gtag","gatsby-add-table-of-contents-in-gatsby","blog-version-2"]}}},"__N_SSG":true}